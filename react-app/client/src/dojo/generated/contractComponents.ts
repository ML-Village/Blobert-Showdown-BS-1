/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";

export type ContractComponents = Awaited<ReturnType<typeof defineContractComponents>>;

export function defineContractComponents(world: World) {
  return {
    BlobertOne: (() => {
      return defineComponent(
        world,
        { player_id: RecsType.BigInt, game_id: RecsType.BigInt, blobert_id: RecsType.BigInt, health: RecsType.Number, blobet_side_effect: RecsType.Number },
        {
          metadata: {
            name: "BlobertOne",
            types: ["contractaddress","u128","u128","u8","enum"],
            customTypes: ["SideEffectType"],
          },
        }
      );
    })(),
    BlobertTwo: (() => {
      return defineComponent(
        world,
        { player_id: RecsType.BigInt, game_id: RecsType.BigInt, blobert_id: RecsType.BigInt, health: RecsType.Number, blobet_side_effect: RecsType.Number },
        {
          metadata: {
            name: "BlobertTwo",
            types: ["contractaddress","u128","u128","u8","enum"],
            customTypes: ["SideEffectType"],
          },
        }
      );
    })(),
    BlobertThree: (() => {
      return defineComponent(
        world,
        { player_id: RecsType.BigInt, game_id: RecsType.BigInt, blobert_id: RecsType.BigInt, health: RecsType.Number, blobet_side_effect: RecsType.Number },
        {
          metadata: {
            name: "BlobertThree",
            types: ["contractaddress","u128","u128","u8","enum"],
            customTypes: ["SideEffectType"],
          },
        }
      );
    })(),
    BlobertFour: (() => {
      return defineComponent(
        world,
        { player_id: RecsType.BigInt, game_id: RecsType.BigInt, blobert_id: RecsType.BigInt, health: RecsType.Number, blobet_side_effect: RecsType.Number },
        {
          metadata: {
            name: "BlobertFour",
            types: ["contractaddress","u128","u128","u8","enum"],
            customTypes: ["SideEffectType"],
          },
        }
      );
    })(),
    BlobertFive: (() => {
      return defineComponent(
        world,
        { player_id: RecsType.BigInt, game_id: RecsType.BigInt, blobert_id: RecsType.BigInt, health: RecsType.Number, blobet_side_effect: RecsType.Number },
        {
          metadata: {
            name: "BlobertFive",
            types: ["contractaddress","u128","u128","u8","enum"],
            customTypes: ["SideEffectType"],
          },
        }
      );
    })(),
    BlobertSix: (() => {
      return defineComponent(
        world,
        { player_id: RecsType.BigInt, game_id: RecsType.BigInt, blobert_id: RecsType.BigInt, health: RecsType.Number, blobet_side_effect: RecsType.Number },
        {
          metadata: {
            name: "BlobertSix",
            types: ["contractaddress","u128","u128","u8","enum"],
            customTypes: ["SideEffectType"],
          },
        }
      );
    })(),
    BlobertLineup: (() => {
      return defineComponent(
        world,
        { address: RecsType.BigInt, blobert_1: RecsType.BigInt, blobert_2: RecsType.BigInt, blobert_3: RecsType.BigInt, blobert_4: RecsType.BigInt, blobert_5: RecsType.BigInt, blobert_6: RecsType.BigInt },
        {
          metadata: {
            name: "BlobertLineup",
            types: ["contractaddress","u128","u128","u128","u128","u128","u128"],
            customTypes: [],
          },
        }
      );
    })(),
    BlobertPokedex: (() => {
      return defineComponent(
        world,
        { blobert_id: RecsType.BigInt, blobert_name: RecsType.BigInt, health: RecsType.Number, attack: RecsType.Number, special_attack: RecsType.Number, special_defense: RecsType.Number, speed: RecsType.Number },
        {
          metadata: {
            name: "BlobertPokedex",
            types: ["u128","felt252","u8","u8","u8","u8","u8"],
            customTypes: [],
          },
        }
      );
    })(),
    Game: (() => {
      return defineComponent(
        world,
        { game_id: RecsType.BigInt, player_a: RecsType.BigInt, player_b: RecsType.BigInt, active_blobert_a: RecsType.BigInt, active_blobert_b: RecsType.BigInt, turn: RecsType.BigInt },
        {
          metadata: {
            name: "Game",
            types: ["u128","contractaddress","contractaddress","u128","u128","contractaddress"],
            customTypes: [],
          },
        }
      );
    })(),
    MoveBook: (() => {
      return defineComponent(
        world,
        { move_id: RecsType.BigInt, move_name: RecsType.BigInt, damage: RecsType.Number, move_type: RecsType.Number },
        {
          metadata: {
            name: "MoveBook",
            types: ["u128","felt252","u8","enum"],
            customTypes: ["MoveType"],
          },
        }
      );
    })(),
    MoveSet: (() => {
      return defineComponent(
        world,
        { blobert_id: RecsType.BigInt, move_1: RecsType.BigInt, move_2: RecsType.BigInt, move_3: RecsType.BigInt, move_4: RecsType.BigInt },
        {
          metadata: {
            name: "MoveSet",
            types: ["u128","u128","u128","u128","u128"],
            customTypes: [],
          },
        }
      );
    })(),
    Moves: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, remaining: RecsType.Number, last_direction: RecsType.Number },
        {
          metadata: {
            name: "Moves",
            types: ["contractaddress","u8","enum"],
            customTypes: ["Direction"],
          },
        }
      );
    })(),
    Player: (() => {
      return defineComponent(
        world,
        { address: RecsType.BigInt, name: RecsType.BigInt, total_duels: RecsType.Number, total_wins: RecsType.Number, total_losses: RecsType.Number, timestamp: RecsType.BigInt },
        {
          metadata: {
            name: "Player",
            types: ["contractaddress","felt252","u16","u16","u16","u64"],
            customTypes: [],
          },
        }
      );
    })(),
    Position: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, vec: { x: RecsType.Number, y: RecsType.Number } },
        {
          metadata: {
            name: "Position",
            types: ["contractaddress","u32","u32"],
            customTypes: ["Vec2"],
          },
        }
      );
    })(),
  };
}
